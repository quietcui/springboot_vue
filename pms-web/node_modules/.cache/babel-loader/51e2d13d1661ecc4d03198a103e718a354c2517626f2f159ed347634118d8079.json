{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'AppLogin',\n  data() {\n    return {\n      name: '',\n      password: ''\n    };\n  },\n  methods: {\n    register() {\n      this.$router.push(\"/register\");\n    },\n    login() {\n      let user = {\n        no: this.name,\n        password: this.password\n      };\n      let self = this;\n      this.$axios.post('http://localhost:8090/user/login', user).then(function (response) {\n        let result = response.data;\n        if (result.code === 200) {\n          console.log(\"登录成功！\");\n          console.log(\"返回的数据：\", result.data);\n          console.log(\"总记录数：\", result.total);\n          self.$router.push(\"/index\");\n        } else if (result.code === 400) {\n          console.log(\"登录失败！\");\n        }\n      }).catch(function (error) {\n        console.log(\"请求错误：\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","password","methods","register","$router","push","login","user","no","self","$axios","post","then","response","result","code","console","log","total","catch","error"],"sources":["src/components/AppLogin.vue"],"sourcesContent":["<template>\r\n     <div class=\"box\">\r\n            <h2>Login</h2>\r\n            <form  action=\"http:cuiguiling\" target=\"_blank\" method=\"get\" autocomplete=\"on\" novalidate=\"true\">\r\n                <div class=\"input-box\">\r\n                    <label>账号</label>\r\n                    <input type=\"text\" />\r\n                </div>\r\n                <div class=\"input-box\">\r\n                    <label>密码</label>\r\n                    <input type=\"password\" />\r\n                </div>\r\n                <div class=\"btn-box\">\r\n                    <a href=\"#\">忘记密码?</a>\r\n                    <div>\r\n                        <button onclick=\"window.location.href='../进入界面/进入界面.html'\">登录</button></a>\r\n                        <button>注册</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n</template>\r\n  \r\n<script>\r\n\r\n  export default {\r\n  name: 'AppLogin',\r\n  data() {\r\n      return {\r\n        name:'',\r\n        password:'',\r\n      }\r\n    },\r\n    methods:{\r\n          register(){\r\n            this.$router.push(\"/register\");\r\n          },\r\n          login() {\r\n            let user = {\r\n              no: this.name,\r\n              password: this.password\r\n            };\r\n            let self = this;\r\n            this.$axios.post('http://localhost:8090/user/login', user)\r\n                .then(function (response) {\r\n                  let result = response.data;\r\n                  if (result.code === 200) {\r\n                    console.log(\"登录成功！\");\r\n                    console.log(\"返回的数据：\", result.data);\r\n                    console.log(\"总记录数：\", result.total);\r\n                    self.$router.push(\"/index\");\r\n                  } else if (result.code === 400) {\r\n                    console.log(\"登录失败！\");\r\n                  }\r\n                })\r\n                .catch(function (error) {\r\n                  console.log(\"请求错误：\", error);\r\n                });\r\n\r\n          }\r\n      }\r\n  }\r\n  \r\n  </script>\r\n  \r\n  <style scoped>\r\n    @charset \"utf-8\";\r\n\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    body {\r\n        height: 100vh;\r\n        background: url(image/bg1.jpg) no-repeat;\r\n        background-size: cover;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    /*  */\r\n    .box {\r\n        width: 350px;\r\n        height: 350px;\r\n        border-top: 1px solid rgba(255,255,255,0.5);/* 在盒子的顶部添加一个1像素宽的边框，颜色为白色，透明度为50%。 */\r\n        border-left: 1px solid rgba(255,255,255,0.5);\r\n        border-bottom: 1px solid rgba(255,255,255,0.3);\r\n        border-right: 1px solid rgba(255,255,255,0.3);\r\n        backdrop-filter: blur(10px);    /* 对盒子应用一个模糊半透明的效果，模糊半径为10像素。这样可以创建玻璃模糊的效果，模糊盒子后面的内容。 */\r\n        background: rgba(50,50,50,0.2);  /* 设置盒子的背景颜色为半透明的深灰色（RGB值为50, 50, 50），透明度为20%。 */\r\n        display: flex;/* 设置盒子使用Flexbox布局。 */\r\n        flex-direction: column;/* 将Flex容器的主轴方向设置为垂直，使得项目在列方向上排列。 */\r\n        justify-content: center;/*  在盒子的垂直方向上居中内容。 */\r\n        align-items: center;/* 在盒子的水平方向上居中内容。 */\r\n        border-radius: 10px;/* 应用一个10像素的圆角，使得盒子的角变得圆滑。 */\r\n    }\r\n\r\n    .box > h2 {\r\n        color: rgba(255,255,255,0.9);\r\n        margin-bottom: 30px;\r\n    }\r\n\r\n    .box .input-box {\r\n        display: flex;\r\n        flex-direction: column;\r\n        box-sizing: border-box;\r\n        margin-bottom: 10px;   /*设置所选 <h2> 元素的底部外边距为30像素。这将在 <h2> 元素的下方留出 30 像素的空间。 */\r\n    }\r\n\r\n    .box .input-box label {\r\n        font-size: 13px;\r\n        color: rgba(255,255,255,0.9);\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    .box .input-box input {\r\n        letter-spacing: 1px;\r\n        font-size: 14px;\r\n        box-sizing: border-box;\r\n        width: 250px;\r\n        height: 35px;\r\n        border-radius: 5px;\r\n        border: 1px solid rgba(255,255,255,0.5);\r\n        background: rgba(255,255,255,0.2);\r\n        outline: none;\r\n        padding: 0 12px;\r\n        color: rgba(255,255,255,0.9);\r\n        transition: 0.2s;\r\n    }\r\n\r\n    .box .input-box input:focus {\r\n        border: 1px solid rgba(255,255,255,0.8);\r\n    }\r\n\r\n    .box .btn-box {\r\n        width: 250px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: start;\r\n    }\r\n\r\n    .box .btn-box > a {\r\n        outline: none;\r\n        display: block;\r\n        width: 250px;\r\n        text-align: end;\r\n        text-decoration: none;\r\n        font-size: 13px;\r\n        color: rgba(255,255,255,0.9);\r\n    }\r\n\r\n    .box .btn-box > a:hover {  /* 悬停状态 */\r\n        color: rgba(255,255,255,1);\r\n    }\r\n\r\n    .box .btn-box > div {\r\n        margin-top: 10px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    .box .btn-box > div > button {\r\n        outline: none;\r\n        margin-top: 10px;\r\n        display: block;\r\n        font-size: 14px;\r\n        border-radius: 5px;\r\n        transition: 0.2s;\r\n    }\r\n\r\n    .box .btn-box > div > button:nth-of-type(1) {\r\n        width: 120px;\r\n        height: 35px;\r\n        color: rgba(255,255,255,0.9);\r\n        border: 1px solid rgba(192, 119, 91, 0.7);\r\n        background: rgba(192, 119, 91, 0.5);\r\n    }\r\n\r\n    .box .btn-box > div > button:nth-of-type(2) {\r\n        width: 120px;\r\n        height: 35px;\r\n        margin-left: 10px;\r\n        color: rgba(255,255,255,0.9);\r\n        border: 1px solid rgba(192, 119, 91, 0.7);\r\n        background: rgba(192, 119, 91, 0.5);\r\n    }\r\n\r\n    .box .btn-box > div > button:hover {\r\n        border: 1px solid rgba(251, 128, 71, 0.7);\r\n        background: rgba(251, 128, 71, 0.5);\r\n    }\r\n  </style>\r\n  \r\n  "],"mappings":";AA0BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAD,IAAA;MACAE,QAAA;IACA;EACA;EACAC,OAAA;IACAC,SAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAC,MAAA;MACA,IAAAC,IAAA;QACAC,EAAA,OAAAT,IAAA;QACAE,QAAA,OAAAA;MACA;MACA,IAAAQ,IAAA;MACA,KAAAC,MAAA,CAAAC,IAAA,qCAAAJ,IAAA,EACAK,IAAA,WAAAC,QAAA;QACA,IAAAC,MAAA,GAAAD,QAAA,CAAAb,IAAA;QACA,IAAAc,MAAA,CAAAC,IAAA;UACAC,OAAA,CAAAC,GAAA;UACAD,OAAA,CAAAC,GAAA,WAAAH,MAAA,CAAAd,IAAA;UACAgB,OAAA,CAAAC,GAAA,UAAAH,MAAA,CAAAI,KAAA;UACAT,IAAA,CAAAL,OAAA,CAAAC,IAAA;QACA,WAAAS,MAAA,CAAAC,IAAA;UACAC,OAAA,CAAAC,GAAA;QACA;MACA,GACAE,KAAA,WAAAC,KAAA;QACAJ,OAAA,CAAAC,GAAA,UAAAG,KAAA;MACA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}